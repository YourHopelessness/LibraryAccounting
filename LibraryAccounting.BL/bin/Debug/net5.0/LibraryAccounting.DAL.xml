<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibraryAccounting.DAL</name>
    </assembly>
    <members>
        <member name="T:LibraryAccounting.DAL.DB.DbConfig">
            <summary>
            Конфигурация контекста базы данных
            </summary>
        </member>
        <member name="M:LibraryAccounting.DAL.DB.DbConfig.GetConnectionString">
            <summary>
            Получеине строки подключения
            </summary>
            <returns>Возвращает строку подключения</returns>
        </member>
        <member name="T:LibraryAccounting.DAL.DB.LibraryContextFactory">
            <summary>
            Класс фабрика для внедрения зависимости во время исполнения
            </summary>
        </member>
        <member name="M:LibraryAccounting.DAL.DB.LibraryContextFactory.CreateDbContext(System.String[])">
            <summary>
            Созадине контекста базы данных
            </summary>
            <param name="args"></param>
            <returns>Контекст базы данных</returns>
        </member>
        <member name="T:LibraryAccounting.DAL.DB.LibraryDbContext">
            <summary>
            Главный контекст базы данных
            </summary>
        </member>
        <member name="M:LibraryAccounting.DAL.DB.LibraryDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{LibraryAccounting.DAL.DB.LibraryDbContext})">
            <summary>
            Конструктор создания контекста с помощью внедрения зависимости
            </summary>
            <param name="options">Параметр для внедрения зависимости</param>
        </member>
        <member name="P:LibraryAccounting.DAL.DB.LibraryDbContext.Logins">
            <summary>
            Таблица явок-паролей
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.DB.LibraryDbContext.Employees">
            <summary>
            Справочниик сотрудников
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.DB.LibraryDbContext.Reservations">
            <summary>
            Таблица бронирования
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.DB.LibraryDbContext.Changes">
            <summary>
            Таблица изменений
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.DB.LibraryDbContext.BooksStatuses">
            <summary>
            Справочник статусов книг
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.DB.LibraryDbContext.Roles">
            <summary>
            Справочник ролей
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.DB.LibraryDbContext.UserRoles">
            <summary>
            Таблица ролей сотрудников
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.DB.LibraryDbContext.Books">
            <summary>
            Таблица книг
            </summary>
        </member>
        <member name="M:LibraryAccounting.DAL.DB.LibraryDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Фунция EF для создания базы данных
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="T:LibraryAccounting.DAL.Repositories.EntityRepository`1">
            <summary>
            Класс универсального репозитория для любой сущности
            </summary>
            <typeparam name="Entity">Тип сущности, передаваемый при инициализации, для которого создается репозиторий</typeparam>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.EntityRepository`1.#ctor(LibraryAccounting.DAL.DB.LibraryDbContext)">
            <summary>
            Конструктор
            </summary>
            <param name="context">Контекст для работы с базой данных</param>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.EntityRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String[])">
            <summary>
            Функция для поиска кортежей в базе данных по заданным условиям отбора и сортировки
            </summary>
            <param name="filter">Лямбда-параметр для фильтрации </param>
            <param name="orderBy">Лямбда для установления порядка сортировки</param>
            <param name="properties">Массив параметров, по которым производиться выборка</param>
            <exception>Генерирует исключение EntityException, если параметр выборки указан неверно</exception>
            <returns>Вовзращает набор кортежей по условию поиска</returns>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.EntityRepository`1.GetByID(System.Object)">
            <summary>
            Функция поиска по идентификатору
            </summary>
            <param name="id">Идентификатор</param>
            <returns>Возвращает конкретный объект - кортеж в базе данных, по данному id</returns>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.EntityRepository`1.Insert(`0)">
            <summary>
            CRUD операция вставки в базу данных
            </summary>
            <param name="entity">Объект, представляющий кортеж, который вносится в базу данных</param>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.EntityRepository`1.Delete(System.Object)">
            <summary>
            CRUD операция удаления по идентификатору
            </summary>
            <param name="id">Идентификатор кортежа в бд</param>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.EntityRepository`1.Delete(`0)">
            <summary>
            CRUD операция удаления
            </summary>
            <param name="entityToDelete">Удалаяемый объект - кортеж из бд</param>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.EntityRepository`1.Update(`0)">
            <summary>
            CRUD операция обновления
            </summary>
            <param name="entityToUpdate">Обновляемый объект - кортеж</param>
        </member>
        <member name="T:LibraryAccounting.DAL.Repositories.LibraryUOW">
            <summary>
            Класс паттерна Unit of Work
            </summary>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.LibraryUOW.#ctor(LibraryAccounting.DAL.DB.LibraryDbContext)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.Repositories.LibraryUOW.Books">
            <summary>
            Синглтон репозитория таблицы книг
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.Repositories.LibraryUOW.Reservations">
            <summary>
            Синглтон репозитория таблицы бронирования
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.Repositories.LibraryUOW.Changes">
            <summary>
            Синглтон репозитория таблицы изменений
            </summary>
        </member>
        <member name="P:LibraryAccounting.DAL.Repositories.LibraryUOW.Employees">
            <summary>
            Синглтон репозитория справочника сотрудников
            </summary>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.LibraryUOW.Save">
            Сохрание в базу данных
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.LibraryUOW.Dispose(System.Boolean)">
            <summary>
            Функция для уничтожения репозиториев
            </summary>
            <param name="disposing">Флаг уничтожения</param>
        </member>
        <member name="M:LibraryAccounting.DAL.Repositories.LibraryUOW.Dispose">
            <summary>
            Уничтожение объектов
            </summary>
        </member>
        <member name="T:LibraryAccounting.Migrations.init_db">
            <summary>
            Миграция
            </summary>
        </member>
    </members>
</doc>
